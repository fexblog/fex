{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\nconst POSTS_URL = 'api/posts.json'\n    , HTTP_OK = 200\n    , AT = \"access_token=\"\n    , TOKEN = \"f817635b9f791a74e711eb4cc32504deea8caf69\"\n    ;\n\nlet app = angular.module('app', ['ngSanitize']);\n\napp.controller(\"NavigationController\", ['$scope', '$rootScope', function NavigationController($scope, $rootScope) {\n    $scope.filter = \"\";\n    $scope.isSearchEnabled=false;\n    $scope.isMenuEnabled=false;\n    $scope.categories = [\n        'javascript',\n        'CSS',\n        'HTML',\n        'other'\n    ];\n    $scope.setFilter = function setFilter(filter=undefined) {\n        $rootScope.$emit('filterPostsByCategory', filter);\n    }\n}]);\n\napp.controller('PostsController', ['$scope', '$rootScope', '$http', function PostsController($scope, $rootScope, $http) {\n    $scope.posts = [];\n    $scope.filter = undefined;\n    function loadUserInformation(post) {\n        let ghAPI = 'https://api.github.com/users/'\n          ;\n        if(!!post.author_gh){\n            $http.get(ghAPI+post.author_gh+\"?\"+AT+TOKEN).then(function getPostAuthor(response) {\n                if(response.status===HTTP_OK){\n                    post.author = {};\n                    post.author.name = response.data.name;\n                    post.author.url = response.data.html_url;\n                    post.author.avatar = response.data.avatar_url;\n                }\n            }, function onError(error) {\n                console.error(error);\n            });\n        }\n    }\n    \n    function loadPostContent(post) {\n        if(post.origin instanceof String){\n            let base = 'https://raw.githubusercontent.com'\n            , gh = 'https://github.com'\n            ;\n            if(!!post.origin && post.origin.indexOf(gh)===0){\n                post.origin = post.origin.replace(gh, base).replace('/blob', ''); \n            }\n            $http.get(post.origin).then(function getPostContent(response) {\n                if(response.status===HTTP_OK){\n                    post.content = response.data;\n                }\n            }, function onError(error) {\n                console.error(error);\n            });\n        } else if(typeof(post.origin)==='object'){\n            let branch;\n            if(!!post.origin.branch){\n                branch = \"ref=\"+post.origin.branch;\n            } \n            let url = \"https://api.github.com/repos/\"+post.author_gh+\"/\"+post.origin.repo+\"/contents/\"+post.origin.path+\"?\"+branch+\"&\"+AT+TOKEN;\n            $http.get(url).then(function getPostContent(response) {\n                if(response.status===HTTP_OK){\n                    post.content = atob(response.data.content);\n                }\n            }, function onError(error) {\n                console.error(error);\n            });\n        }\n    }\n    \n    function loadPostInfo(post) {\n        if(typeof(post.origin)==='object'){\n            let branch;\n            if(!!post.origin.branch){\n                branch = \"ref=\"+post.origin.branch;\n            } \n            let infoURL = \"https://api.github.com/repos/\"+post.author_gh+\"/\"+post.origin.repo+\"?\"+branch+\"&\"+AT+TOKEN;\n            $http.get(infoURL).then(function getPostContent(response) {\n                if(response.status===HTTP_OK){\n                    post.published = moment(response.data.updated_at).format('MMMM D, YYYY');\n                }\n            }, function onError(error) {\n                console.error(error);\n            });\n        }\n    }\n    \n    $rootScope.$on('filterPostsByCategory', function PostsController_filter(evt, filter) {\n        $scope.filter = filter;\n    });\n    \n    $scope.checkFilter = function checkFilter(post) {\n        if(!$scope.filter || post.category===$scope.filter){\n            return true;\n        }\n        return false;\n    }\n    \n    $scope.loadPosts = function loadPosts() {\n        $http.get(POSTS_URL).then(function getArticles(response) {\n            if(response.status===HTTP_OK){\n                $scope.posts = response.data;\n                response.data.map(loadPostInfo);\n                response.data.map(loadPostContent);\n                response.data.map(loadUserInformation);\n            }\n        }, function onError(error) {\n            console.error(error);\n        });\n    };\n    $scope.loadPosts();\n}]);\n\napp.directive('blogPost', ['$sce', function PostDirective($sce) {\n    return {\n        'restrict': 'E',\n        'replace': true,\n        'controller': function($scope){\n            $scope.getPostContent = function(post){\n              let html;\n              if(!!post.content){\n                html = marked(post.content);\n              }\n              return $sce.trustAsHtml(html);\n            };\n        },\n        'templateUrl': './components/post.html'\n    }\n}]);\n"],"sourceRoot":"/source/"}